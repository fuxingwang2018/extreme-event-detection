#
#       Configuration File for Extreme_Event_Detection
#
#  	-- Modify the []-sections with user defined settings
#
# 	*** N.B. ***
# 	Please read through documentation on how to set the configurations:
# 	https://extreme-event-detection.readthedocs.io/en/latest/
#


# -- User settings --#

[INPUT DATA]
# Define paths to input data; target data and contingency data (optional).
# Contingency data is used to validate or infer concurrent events identified in target data.

target data = {
	'fpath': '/nobackup/rossby24/proj/rossby/joint_exp/norcp/netcdf/NorCP_ALADIN_ERAI_1997_2018',
	'grid type': 'reg', 'grid name': 'NORCP12',
      	'chunks_time': {'time': -1}, 'chunks_x': {'x': -1}, 'chunks_y': {'y': -1},
	'start year': 2008, 
	'end year': 2008, 
	'month': [6, 7, 8],
	'date': None,
 	'variables': { 'pr': {
 	   		'freq': '1hr',
 	   		'units': 'mm',
 	   		'scale factor': 3600,
 	   		'offset factor': None,
 	   		'regrid to': None,
 	   		'regrid method': 'conservative',
			'resample resolution': ['D', 'max']},
 	   },
	}
climatology data = {
	'fpath': '/nobackup/rossby24/proj/rossby/joint_exp/norcp/netcdf/NorCP_ALADIN_ERAI_1997_2018',
	'grid type': 'reg', 'grid name': 'NORCP12',
      	'chunks_time': {'time': -1}, 'chunks_x': {'x': 50}, 'chunks_y': {'y': 50},
	'start year': 1998,
	'end year': 2018,
	'month': [6, 7, 8],
	'date': None,
	'day window size': None,
 	'variables': { 'pr': {
 	   		'freq': '1hr',
 	   		'units': 'mm',
 	   		'scale factor': 3600,
 	   		'offset factor': None,
 	   		'regrid to': None,
 	   		'regrid method': 'conservative',
			'resample resolution': ['D', 'max']},
 	   },
	}
# TODO: Use data (high-res) to investigate co-existence of events 
# contingency data = {
# 	'fpath': '/path/to/netcdf/files',
# 	'grid type': 'reg', 'grid name': 'label_grid_model_2',
#      	'chunks_time': {'time': -1}, 'chunks_x': {'x': -1}, 'chunks_y': {'y': -1},
# 	}



[SETTINGS]

output dir = /nobackup/rossby27/users/sm_petli/projects/deode/wp4.3/analysis/test_230226_extr_event_det

# Regions to extract: Empty or list [reg1, reg2, ...
target regions = ['South Sweden', 'Norrland']


[DETECTION METHOD]
# Which detection method to deploy; threshold-optim, EFI, ...
method = 'threshold-optim'
method args = {'threshold': {'percentile': 99}, 'filtering method': 'sum', 'top select percentage': 10}


[PLOTTING]
# Do validation plots -- a standard set of plots for general validation 
detection plot = False

# Map plot settings
# Example of configuration displayed here; for default settings set all properties to empty dictionaries -- {}
map configure = {'proj': 'stere', 'res': 'l', 'zoom': 'geom', 'zoom_geom': [1700000, 2100000], 'lon_0': 10.0, 'lat_0': 60.6}
map grid setup = {'axes_pad': 0.5, 'cbar_mode': 'each', 'cbar_location': 'right',
              	  'cbar_size': '5%%', 'cbar_pad': 0.03}
map kwargs = {'filled': True, 'mesh': True}

# Line plot settings
line grid setup = {'axes_pad': (11., 6.)}
line kwargs = {'lw': 2.5}


[CLUSTER]
# Local pc or SLURM are implemented.

# local/slurm
cluster type = slurm

# SLURM
# Default (not needed to set here) is set to a normal compute node for Bi, 
# which has 64GB memory. And walltime is set to 1 hour.
# If fat node is requested in job_extra, increase memory to 256GB.
nodes = 2

# extra key word arguments for chosen cluster
# cluster kwargs = {'walltime': '02:00:00'}
cluster kwargs = {'walltime': '05:00:00', 'memory': '256GB', 'job_extra_directives': ['-C fat']}
